{
  "uid" : "6ff4623ec26bc3fb",
  "name" : "获取验证码",
  "fullName" : "test_case.test_api.Test_API#test_gwyc_api",
  "historyId" : "710332c20b4c155d56c813b61bbaa914",
  "time" : {
    "start" : 1609315485833,
    "stop" : 1609315486442,
    "duration" : 609
  },
  "description" : "\n        调用接口\n        :param data: 接口信息\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    调用接口\n    :param data: 接口信息\n    :return:\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "ValueError: coordinate is not a valid coordinate or range",
  "statusTrace" : "self = <test_api.Test_API object at 0x0000017744B80470>\ndata = {'case_assert': '{\"success\":true}', 'case_code': 200.0, 'case_data': '{\"code_type\":\"3\",\"login_name\":\"13577777777\",\"u_t...pe\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", ...}\n\n    @pytest.mark.parametrize('data', excel) #传入参数\n    @allure.step('传入用例')    #设置用例步骤\n    @allure.severity('blocker')     #设置用例严重级别为“中断缺陷”客户端程序无响应，无法执行下一步\n    def test_gwyc_api(self,data):\n        \"\"\"\n        调用接口\n        :param data: 接口信息\n        :return:\n        \"\"\"\n        # for i in data:\n        #     data = i\n        #     return data\n    \n        allure.dynamic.story(data['case_module'])\n        allure.dynamic.title(data['case_name'])\n    \n        # 对请求头做为空处理并添加token\n        headers = data['case_headers']\n        #将字符串转化为字典\n        headers = ast.literal_eval(headers)\n    \n    \n        # 对请求参数做为空处理\n        params = data['case_data']\n        if len(str(params).split()) == 0:\n            pass\n        elif len(str(params)) >= 0:\n            params = params\n    \n    \n    \n    \n    \n        # 执行用例\n        if data['case_method'] == 'get':\n            r = ApiRequst().send_requests(\n                method='get',\n                url=data['case_url'],\n                json=params,\n                headers=headers\n            )\n            allure.attach(\"返回结果\",'{0}'.format(r.json()))#在报告中显示返回结果\n            assert int(r.json()['code']) == int(data['case_code'])   # 断言验证状态码\n            a = assert_content(data['case_assert'], r.json())   # 验证响应数据\n            allure.attach(\"验证响应数据，{0}\".format(a))\n    \n    \n        elif data['case_method'] == 'post':\n            r = ApiRequst().send_requests(\n                method='post',\n                url=data['case_url'],\n                json=ast.literal_eval(params),\n                headers=headers\n            )\n    \n            allure.attach(\"返回结果\",'{0}'.format(r.json()))\n            assert int(r.json()['code']) == int(data['case_code'])  # 验证状态码\n            asserts = assert_content(data['case_assert'], r.json()) #调用断言验证方法\n            allure.attach(\"验证响应数据，{0}\".format(asserts))  # 在allure报告中显示验证响应数据\n            if asserts == '断言结果成功':\n                data['case_result'] = 'Pass'\n                data['case_remarks'] = asserts\n            else:\n                data['case_result'] = 'Fail'\n                data['case_remarks'] = asserts\n>           reault = OperationExcel().write(data)\n\ntest_case\\test_api.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\openrationExcel.py:84: in write\n    sheet[\"coordinate\"].fill = PatternFill(\"solid\", fgColor=\"FFFFFF\")\n..\\..\\lib\\site-packages\\openpyxl\\worksheet\\worksheet.py:290: in __getitem__\n    min_col, min_row, max_col, max_row = range_boundaries(key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nrange_string = 'coordinate'\n\n    def range_boundaries(range_string):\n        \"\"\"\n        Convert a range string into a tuple of boundaries:\n        (min_col, min_row, max_col, max_row)\n        Cell coordinates will be converted into a range with the cell at both end\n        \"\"\"\n        msg = \"{0} is not a valid coordinate or range\".format(range_string)\n        m = ABSOLUTE_RE.match(range_string)\n        if not m:\n>           raise ValueError(msg)\nE           ValueError: coordinate is not a valid coordinate or range\n\n..\\..\\lib\\site-packages\\openpyxl\\utils\\cell.py:135: ValueError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n        调用接口\n        :param data: 接口信息\n        :return:\n        ",
    "status" : "broken",
    "statusMessage" : "ValueError: coordinate is not a valid coordinate or range",
    "statusTrace" : "self = <test_api.Test_API object at 0x0000017744B80470>\ndata = {'case_assert': '{\"success\":true}', 'case_code': 200.0, 'case_data': '{\"code_type\":\"3\",\"login_name\":\"13577777777\",\"u_t...pe\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", ...}\n\n    @pytest.mark.parametrize('data', excel) #传入参数\n    @allure.step('传入用例')    #设置用例步骤\n    @allure.severity('blocker')     #设置用例严重级别为“中断缺陷”客户端程序无响应，无法执行下一步\n    def test_gwyc_api(self,data):\n        \"\"\"\n        调用接口\n        :param data: 接口信息\n        :return:\n        \"\"\"\n        # for i in data:\n        #     data = i\n        #     return data\n    \n        allure.dynamic.story(data['case_module'])\n        allure.dynamic.title(data['case_name'])\n    \n        # 对请求头做为空处理并添加token\n        headers = data['case_headers']\n        #将字符串转化为字典\n        headers = ast.literal_eval(headers)\n    \n    \n        # 对请求参数做为空处理\n        params = data['case_data']\n        if len(str(params).split()) == 0:\n            pass\n        elif len(str(params)) >= 0:\n            params = params\n    \n    \n    \n    \n    \n        # 执行用例\n        if data['case_method'] == 'get':\n            r = ApiRequst().send_requests(\n                method='get',\n                url=data['case_url'],\n                json=params,\n                headers=headers\n            )\n            allure.attach(\"返回结果\",'{0}'.format(r.json()))#在报告中显示返回结果\n            assert int(r.json()['code']) == int(data['case_code'])   # 断言验证状态码\n            a = assert_content(data['case_assert'], r.json())   # 验证响应数据\n            allure.attach(\"验证响应数据，{0}\".format(a))\n    \n    \n        elif data['case_method'] == 'post':\n            r = ApiRequst().send_requests(\n                method='post',\n                url=data['case_url'],\n                json=ast.literal_eval(params),\n                headers=headers\n            )\n    \n            allure.attach(\"返回结果\",'{0}'.format(r.json()))\n            assert int(r.json()['code']) == int(data['case_code'])  # 验证状态码\n            asserts = assert_content(data['case_assert'], r.json()) #调用断言验证方法\n            allure.attach(\"验证响应数据，{0}\".format(asserts))  # 在allure报告中显示验证响应数据\n            if asserts == '断言结果成功':\n                data['case_result'] = 'Pass'\n                data['case_remarks'] = asserts\n            else:\n                data['case_result'] = 'Fail'\n                data['case_remarks'] = asserts\n>           reault = OperationExcel().write(data)\n\ntest_case\\test_api.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\openrationExcel.py:84: in write\n    sheet[\"coordinate\"].fill = PatternFill(\"solid\", fgColor=\"FFFFFF\")\n..\\..\\lib\\site-packages\\openpyxl\\worksheet\\worksheet.py:290: in __getitem__\n    min_col, min_row, max_col, max_row = range_boundaries(key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nrange_string = 'coordinate'\n\n    def range_boundaries(range_string):\n        \"\"\"\n        Convert a range string into a tuple of boundaries:\n        (min_col, min_row, max_col, max_row)\n        Cell coordinates will be converted into a range with the cell at both end\n        \"\"\"\n        msg = \"{0} is not a valid coordinate or range\".format(range_string)\n        m = ABSOLUTE_RE.match(range_string)\n        if not m:\n>           raise ValueError(msg)\nE           ValueError: coordinate is not a valid coordinate or range\n\n..\\..\\lib\\site-packages\\openpyxl\\utils\\cell.py:135: ValueError",
    "steps" : [ {
      "name" : "传入用例",
      "time" : {
        "start" : 1609315485833,
        "stop" : 1609315486395,
        "duration" : 562
      },
      "status" : "broken",
      "statusMessage" : "ValueError: coordinate is not a valid coordinate or range\n",
      "statusTrace" : "  File \"F:\\Python\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"F:\\Python\\Test_learn\\API_testing_framework\\test_case\\test_api.py\", line 88, in test_gwyc_api\n    reault = OperationExcel().write(data)\n  File \"F:\\Python\\Test_learn\\API_testing_framework\\utils\\openrationExcel.py\", line 84, in write\n    sheet[\"coordinate\"].fill = PatternFill(\"solid\", fgColor=\"FFFFFF\")\n  File \"F:\\Python\\lib\\site-packages\\openpyxl\\worksheet\\worksheet.py\", line 290, in __getitem__\n    min_col, min_row, max_col, max_row = range_boundaries(key)\n  File \"F:\\Python\\lib\\site-packages\\openpyxl\\utils\\cell.py\", line 135, in range_boundaries\n    raise ValueError(msg)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d19724f89893208b",
        "name" : "{'success': True, 'object': {'code': '350712'}, 'message': '', 'code': '200', 'remark': '', 'time': '2020-12-30 16:04:45', 'addition': '', 'id': ''}",
        "source" : "d19724f89893208b.attach",
        "type" : "text/plain",
        "size" : 12
      }, {
        "uid" : "5705182607c072fe",
        "name" : "e72729ef-67fd-41aa-b7ed-de6595c67ce5-attachment.attach",
        "source" : "5705182607c072fe.attach",
        "type" : "text/plain",
        "size" : 39
      } ],
      "parameters" : [ {
        "name" : "data",
        "value" : "{'case_id': 1.0, 'case_module': '登录', 'case_name': '获取验证码', 'case_url': 'http://39.108.95.246:6218/bbox2-web-mobile-cat/common/getVeriCode', 'case_method': 'post', 'case_type': 'json', 'case_data': '{\"code_type\":\"3\",\"login_name\":\"13577777777\",\"u_type\":\"2\",\"app_id\":\"6015\",\"cj_type\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", 'case_preposition': '', 'case_isRun': 'y', 'case_code': 200.0, 'case_assert': '{\"success\":true}', 'case_result': '', 'case_remarks': ''}"
      } ],
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "feature",
    "value" : "接口自动化测试用例"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "Test_API"
  }, {
    "name" : "host",
    "value" : "DESKTOP-MS3E5GO"
  }, {
    "name" : "thread",
    "value" : "11816-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'case_id': 1.0, 'case_module': '登录', 'case_name': '获取验证码', 'case_url': 'http://39.108.95.246:6218/bbox2-web-mobile-cat/common/getVeriCode', 'case_method': 'post', 'case_type': 'json', 'case_data': '{\"code_type\":\"3\",\"login_name\":\"13577777777\",\"u_type\":\"2\",\"app_id\":\"6015\",\"cj_type\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", 'case_preposition': '', 'case_isRun': 'y', 'case_code': 200.0, 'case_assert': '{\"success\":true}', 'case_result': '', 'case_remarks': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "6ff4623ec26bc3fb.json",
  "parameterValues" : [ "{'case_id': 1.0, 'case_module': '登录', 'case_name': '获取验证码', 'case_url': 'http://39.108.95.246:6218/bbox2-web-mobile-cat/common/getVeriCode', 'case_method': 'post', 'case_type': 'json', 'case_data': '{\"code_type\":\"3\",\"login_name\":\"13577777777\",\"u_type\":\"2\",\"app_id\":\"6015\",\"cj_type\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", 'case_preposition': '', 'case_isRun': 'y', 'case_code': 200.0, 'case_assert': '{\"success\":true}', 'case_result': '', 'case_remarks': ''}" ]
}