{
  "uid" : "cf5469e4d3389ec4",
  "name" : "获取验证码",
  "fullName" : "test_case.test_api.Test_API#test_gwyc_api",
  "historyId" : "710332c20b4c155d56c813b61bbaa914",
  "time" : {
    "start" : 1608711001502,
    "stop" : 1608711001882,
    "duration" : 380
  },
  "description" : "\n        调用接口\n        :param data: 接口信息\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    调用接口\n    :param data: 接口信息\n    :return:\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '{\"success\":true}' in {'addition': '', 'code': '200', 'id': '', 'message': '', ...}\n +  where {'addition': '', 'code': '200', 'id': '', 'message': '', ...} = <bound method Response.json of <Response [200]>>()\n +    where <bound method Response.json of <Response [200]>> = <Response [200]>.json",
  "statusTrace" : "self = <test_api.Test_API object at 0x000001BBDE7DEDA0>\ndata = {'case_code': 200.0, 'case_data': '{\"code_type\":\"3\",\"login_name\":\"13577777777\",\"u_type\":\"2\",\"app_id\":\"6015\",\"cj_type\":...user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", 'case_id': 'case_001', ...}\n\n    @pytest.mark.parametrize('data', excel)\n    def test_gwyc_api(self,data):\n        \"\"\"\n        调用接口\n        :param data: 接口信息\n        :return:\n        \"\"\"\n        # for i in data:\n        #     data = i\n        #     return data\n    \n        allure.dynamic.story(data['case_module'])\n        allure.dynamic.title(data['case_name'])\n    \n        # 对请求头做为空处理并添加token\n        allure.step('获取headers')\n        headers = data['case_headers']\n        #将字符串转化为字典\n        headers = ast.literal_eval(headers)\n    \n    \n        # 对请求参数做为空处理\n        params = data['case_data']\n        if len(str(params).split()) == 0:\n            pass\n        elif len(str(params)) >= 0:\n            params = params\n    \n    \n    \n        # 执行用例\n        allure.step('执行用例')\n        if data['case_method'] == 'get':\n            r = ApiRequst().send_requests(\n                method='get',\n                url=data['case_url'],\n                json=params,\n                headers=headers\n            )\n            assert int(r.json()['code']) == int(data['case_code'])   # 验证状态码\n            assert data['case_result'] in json.dumps(r.json(), ensure_ascii=False)  # 验证响应数据\n        elif data['case_method'] == 'post':\n            r = ApiRequst().send_requests(\n                method='post',\n                url=data['case_url'],\n                json=ast.literal_eval(params),\n                headers=headers\n            )\n            assert int(r.json()['code']) == int(data['case_code'])  # 验证状态码\n>           assert data['case_result'] in r.json()  # 验证响应数据\nE           assert '{\"success\":true}' in {'addition': '', 'code': '200', 'id': '', 'message': '', ...}\nE            +  where {'addition': '', 'code': '200', 'id': '', 'message': '', ...} = <bound method Response.json of <Response [200]>>()\nE            +    where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n\ntest_case\\test_api.py:66: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "feature",
    "value" : "接口自动化测试用例"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "Test_API"
  }, {
    "name" : "host",
    "value" : "DESKTOP-MS3E5GO"
  }, {
    "name" : "thread",
    "value" : "5316-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'case_id': 'case_001', 'case_module': '登录', 'case_name': '获取验证码', 'case_url': 'http://39.108.95.246:6218/bbox2-web-mobile-cat/common/getVeriCode', 'case_method': 'post', 'case_type': 'json', 'case_data': '{\"code_type\":\"3\",\"login_name\":\"13577777777\",\"u_type\":\"2\",\"app_id\":\"6015\",\"cj_type\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", 'case_preposition': '', 'case_isRun': 'y', 'case_code': 200.0, 'case_result': '{\"success\":true}'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "cf5469e4d3389ec4.json",
  "parameterValues" : [ "{'case_id': 'case_001', 'case_module': '登录', 'case_name': '获取验证码', 'case_url': 'http://39.108.95.246:6218/bbox2-web-mobile-cat/common/getVeriCode', 'case_method': 'post', 'case_type': 'json', 'case_data': '{\"code_type\":\"3\",\"login_name\":\"13577777777\",\"u_type\":\"2\",\"app_id\":\"6015\",\"cj_type\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", 'case_preposition': '', 'case_isRun': 'y', 'case_code': 200.0, 'case_result': '{\"success\":true}'}" ]
}