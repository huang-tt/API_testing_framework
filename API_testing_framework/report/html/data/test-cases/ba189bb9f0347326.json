{
  "uid" : "ba189bb9f0347326",
  "name" : "登录店员端",
  "fullName" : "test_case.test_api.Test_API#test_gwyc_api",
  "historyId" : "a9ee1ddb01c8ff441ca91ab4932a3cee",
  "time" : {
    "start" : 1609318535116,
    "stop" : 1609318535115,
    "duration" : -1
  },
  "description" : "\n        调用接口\n        :param data: 接口信息\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    调用接口\n    :param data: 接口信息\n    :return:\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n1 Failed Assumptions:\n\ntest_case\\test_api.py:80: AssumptionFailure\n>>\tpytest.assume(int(r.json()['code']) == int(data['case_code']))   # 验证状态码\nAssertionError: assert False",
  "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               1 Failed Assumptions:\nE               \nE               test_case\\test_api.py:80: AssumptionFailure\nE               >>\tpytest.assume(int(r.json()['code']) == int(data['case_code']))   # 验证状态码\nE               AssertionError: assert False\n\n..\\..\\lib\\site-packages\\six.py:702: FailedAssumption",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n        调用接口\n        :param data: 接口信息\n        :return:\n        ",
    "status" : "failed",
    "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n1 Failed Assumptions:\n\ntest_case\\test_api.py:80: AssumptionFailure\n>>\tpytest.assume(int(r.json()['code']) == int(data['case_code']))   # 验证状态码\nAssertionError: assert False",
    "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               1 Failed Assumptions:\nE               \nE               test_case\\test_api.py:80: AssumptionFailure\nE               >>\tpytest.assume(int(r.json()['code']) == int(data['case_code']))   # 验证状态码\nE               AssertionError: assert False\n\n..\\..\\lib\\site-packages\\six.py:702: FailedAssumption",
    "steps" : [ {
      "name" : "传入用例",
      "time" : {
        "start" : 1609318535116,
        "stop" : 1609318535288,
        "duration" : 172
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3ddc7b11e4233205",
        "name" : "{'success': False, 'object': {}, 'message': '验证码不正确', 'code': '400', 'remark': '', 'time': '2020-12-30 16:55:35', 'addition': '', 'id': ''}",
        "source" : "3ddc7b11e4233205.attach",
        "type" : "text/plain",
        "size" : 12
      }, {
        "uid" : "ebbf01fbf8d29cdf",
        "name" : "fb75d0bd-dfb5-47af-9982-283171a1158e-attachment.attach",
        "source" : "ebbf01fbf8d29cdf.attach",
        "type" : "text/plain",
        "size" : 223
      } ],
      "parameters" : [ {
        "name" : "data",
        "value" : "{'case_id': 2.0, 'case_module': '登录', 'case_name': '登录店员端', 'case_url': 'http://39.108.95.246:6218/bbox2-web-mobile-cat/clerk/loginForClerk', 'case_method': 'post', 'case_type': 'json', 'case_data': '{\"code\":\"66666\",\"phone\":\"13577777777\",\"app_id\":\"6015\",\"cj_type\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", 'case_preposition': '', 'case_isRun': 'y', 'case_code': 200.0, 'case_assert': '{\"success\":true}', 'case_result': '', 'case_remarks': ''}"
      } ],
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "feature",
    "value" : "接口自动化测试用例"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "Test_API"
  }, {
    "name" : "host",
    "value" : "DESKTOP-MS3E5GO"
  }, {
    "name" : "thread",
    "value" : "4668-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'case_id': 2.0, 'case_module': '登录', 'case_name': '登录店员端', 'case_url': 'http://39.108.95.246:6218/bbox2-web-mobile-cat/clerk/loginForClerk', 'case_method': 'post', 'case_type': 'json', 'case_data': '{\"code\":\"66666\",\"phone\":\"13577777777\",\"app_id\":\"6015\",\"cj_type\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", 'case_preposition': '', 'case_isRun': 'y', 'case_code': 200.0, 'case_assert': '{\"success\":true}', 'case_result': '', 'case_remarks': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ba189bb9f0347326.json",
  "parameterValues" : [ "{'case_id': 2.0, 'case_module': '登录', 'case_name': '登录店员端', 'case_url': 'http://39.108.95.246:6218/bbox2-web-mobile-cat/clerk/loginForClerk', 'case_method': 'post', 'case_type': 'json', 'case_data': '{\"code\":\"66666\",\"phone\":\"13577777777\",\"app_id\":\"6015\",\"cj_type\":0,\"token\":\"TOKEN\",\"user_id\":\"USER_ID\"}', 'case_headers': \"{'Content-Type': 'application/json;charset=UTF-8'}\", 'case_preposition': '', 'case_isRun': 'y', 'case_code': 200.0, 'case_assert': '{\"success\":true}', 'case_result': '', 'case_remarks': ''}" ]
}